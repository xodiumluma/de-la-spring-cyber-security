pluginManagement {
  repositories {
    gradlePluginPortal()
  }
}

plugins {
  id "com.gradle.enterprise" version "3.12.6"
  id "io.spring.ge.conventions" version "0.0.14"
}

dependencyResolutionManagement {
  repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
  }
}

rootProject.name = 'spring-security'

FileTree buildFiles = fileTree(rootDir) {
  List excludes = gradle.startParameter.projectProperties.get("excludeProjects")?.split(",")
  include '**/*.gradle', '**/*.gradle.kts'
  exclude 'build', '**/gradle', 'settings.gradle', 'buildSrc', '/build.gradle', '.*', 'out'
  exclude '**/grails3'
  if(excludes) {
    exclude excludes
  }
}

String rootDirPath = rootDir.absolutePath + File.separator
buildFiles.each { File buildFile ->
  boolean isDefaultName = 'build.gradle'.equals(buildFile.name)
  boolean isKotlin = buildFile.name.endsWith('.kts')
  if (isDefaultName) {
    String buildFilePath = buildFile.parentFile.absolutePath
    include buildFilePath.replace(rootDirPath, '').replace(File.separator, ':')
  } else {
    def which = isKotlin ? '.gradle.kts' : '.gradle'
    def projectName = buildFile.name.replace(which, '')
    def projectPath = ':' + projectName
    include projectPath
    def project = findProject("${projectPath}")
    project.name = projectName
    project.projectDir = buildFile.parentFile
    project.buildFileName = buildFile.name
  }
}